apiVersion: v1
kind: PersistentVolume
metadata:
  name: mysql-nagy-illes-pv
  labels:
    type: local
spec:
  storageClassName: standard
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/data-nagy-illes-mysql"
    
---    

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-nagy-illes-pv-claim
spec:
  storageClassName: standard
  volumeName: mysql-nagy-illes-pv
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-nagy-illes
spec:
  selector:
    matchLabels:
      app: mysql-nagy-illes
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: mysql-nagy-illes
    spec:
      containers:
        - image: mariadb:10.7.3
          name: mysql-nagy-illes
          env:
            - name: MARIADB_ROOT_PASSWORD
              value: V@r1S3cret
          ports:
            - containerPort: 3306
              name: mysql
          volumeMounts:
            - name: mysql-persistent-storage
              mountPath: /var/lib/mysql
      volumes:
        - name: mysql-persistent-storage
          persistentVolumeClaim:
            claimName: mysql-nagy-illes-pv-claim

---

apiVersion: v1
kind: Service
metadata:
  name: mysql-nagy-illes-cluster-ip-service
spec:
  type: ClusterIP
  ports:
    - port: 3306
      targetPort: 3306
  selector:
    app: mysql-nagy-illes


---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: nagy-illes-phpmyadmin-deployment
  labels:
    app: phpmyadmin
spec:
  replicas: 1
  selector:
    matchLabels:
      app: phpmyadmin
  template:
    metadata:
      labels:
        app: phpmyadmin
    spec:
      containers:
        - name: phpmyadmin
          image: phpmyadmin/phpmyadmin
          env:
            - name: PMA_HOST
              value: mysql-nagy-illes-cluster-ip-service
            - name: PMA_PORT
              value: "3306"
            - name: MYSQL_ROOT_PASSWORD
              value: V@r1S3cret
          ports:
            - containerPort: 80
                       
---

apiVersion: v1
kind: Service
metadata:
  name: nagy-illes-phpmyadmin-cluster-ip-service
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 80
  selector:
    app: phpmyadmin

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: nagy-illes-backend-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      component: nagy-illes-backend
  template:
    metadata:
      labels:
        component: nagy-illes-backend
    spec:
      containers:
        - name: backend
          image: ghcr.io/jedlik-gyor/nagyilles-backend:1.0.2
          env:
          - name: ConnectionStrings__db
            value: "Server=mysql-nagy-illes-cluster-ip-service.default.svc.cluster.local;Database=project_discite;Uid=root;Pwd=V@r1S3cret;"
          - name: JWT__Key
            value: "ZQJPe7Ghu_v7M7kVy-WJhx6zAmlLuMECpjdguB5q616UjWtYuT-DzVOwfd8wiczoHbOtJIwevUrrTpIeRuSpXw"
          - name: JWT__ExpireInMinute
            value: "60"
          ports:
            - containerPort: 80
      imagePullSecrets:
        - name: jedlik-gyor-ghcr-io-registry-secret
                       
---

apiVersion: v1
kind: Service
metadata:
  name: nagy-illes-backend-cluster-ip-service
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 80
  selector:
    component: nagy-illes-backend
    
---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: nagy-illes-backend-ingress-service
  annotations:
    kubernetes.io/ingress.class: 'nginx'
    nginx.ingress.kubernetes.io/use-regex: 'true'
    nginx.ingress.kubernetes.io/rewrite-target: /$1
    cert-manager.io/cluster-issuer: 'letsencrypt-prod'
    nginx.ingress.kubernetes.io/ssl-redirect: 'true'    
    
spec:
  tls:
    - hosts:
        - nagyilles.jedlik.cloud
      secretName: cluster-jedlik-eu
  rules:
               
    - host: nagyilles.jedlik.cloud
      http:
        paths:
          - path: /api/?(.*)
            pathType: Prefix
            backend:
              service:
                name: nagy-illes-backend-cluster-ip-service
                port:
                  number: 80                  
                                    
---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: nagy-illes-phpmyadmin-ingress-service
  annotations:
    kubernetes.io/ingress.class: 'nginx'
    nginx.ingress.kubernetes.io/use-regex: 'true'
    nginx.ingress.kubernetes.io/rewrite-target: /$1
    cert-manager.io/cluster-issuer: 'letsencrypt-prod'
    nginx.ingress.kubernetes.io/ssl-redirect: 'true'
    
spec:
  tls:
    - hosts:
        - phpmyadmin.nagyilles.jedlik.cloud
      secretName: cluster-jedlik-eu
  rules:
    - host: phpmyadmin.nagyilles.jedlik.cloud
      http:
        paths:
          - path: /?(.*)
            pathType: Prefix
            backend:
              service:
                name: nagy-illes-phpmyadmin-cluster-ip-service
                port:
                  number: 80                  
                                    